#!/bin/bash

# clean-up all the stopped containers|volumes|images
dcleanup() {
	local containers
	containers=( $(docker ps -aq 2>/dev/null) )
	docker rm "${containers[@]}" 2> /dev/null
	local volumes
	volumes=( $(docker ps --filter status=exited -q 2> /dev/null) )
	docker rm -v "${volumes[@]}" 2 > /dev/null
	local images
	images=( $(docker images --filter status=exited -q 2>/dev/null) )
	docker rmi "${images[@]}" 2>/dev/null
}

# delete stopped containers
del_stopped() {
	local name=$1
	local state
	state=$(docker inspect --format "{{.State.Running}}" "$name" 2> /dev/null)

	if [[ "$state" == "false" ]]; then
		docker rm "$name"
	fi
}

# resolve a dependency
relies_on(){
	for container in "$@"; do
		local state
		state=$(docker inspect --format "{{.State.Running}}" "$container" 2>/dev/null)

		if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
			echo "$container is not running, starting it for you."
			$container
		fi
	done
}


# get ip of containers
docker-ip() {
	docker inspect --format='[{{ .Id }}]: {{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' "$@"
}
